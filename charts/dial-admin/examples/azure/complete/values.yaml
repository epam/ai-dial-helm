extraDeploy:
  - apiVersion: secrets-store.csi.x-k8s.io/v1
    kind: SecretProviderClass
    metadata:
      name: admin-backend-config
      namespace: '{{ template "common.names.namespace" . }}'
    spec:
      provider: azure
      parameters:
        keyvaultName: "%%KEY_VAULT_NAME%%"
        objects: |
            - |
              objectName: "%%H2DataSourcePassword%%"
              objectType: secret
            - |
              objectName: "%%H2DataSourceEncryptedFileKey%%"
              objectType: secret
            - |
              objectName: "%%H2DataSourceMasterKey%%"
              objectType: secret                            
        tenantId: "%%AZURE_TENANT_ID%%"
        useVMManagedIdentity: "true"
        userAssignedIdentityID: "%%MANAGED_IDENTITY_CLIENT_ID%%"
      secretObjects:
        - data:
            - key: H2_DATASOURCE_MASTER_KEY
              objectName: "%%H2DataSourceMasterKey%%"
            - key: H2_DATASOURCE_ENCRYPTED_FILE_KEY
              objectName: "%%H2DataSourceEncryptedFileKey%%"
            - key: H2_DATASOURCE_PASSWORD
              objectName: "%%H2DataSourcePassword%%"
          secretName: admin-backend-csi-secrets
          type: Opaque

  - kind: PersistentVolume
    apiVersion: v1
    metadata:
      name: h2-admindb-storage
    spec:
      accessModes:
        - "ReadWriteMany"
      capacity:
        storage: "5Gi"
      csi:
        driver: blob.csi.azure.com
        volumeHandle: h2-admindb-storage
        volumeAttributes:
          AzureStorageAuthType: MSI
          AzureStorageIdentityClientID: "%%MANAGED_IDENTITY_CLIENT_ID%%"
          containerName: admindb
          protocol: fuse
          resourceGroup: "%%AZURE_STORAGE_ACCOUNT_RESOURCE_GROUP%%"
          storageAccount: "%%AZURE_STORAGE_ACCOUNT_NAME%%"
      storageClassName: azureblob-fuse-premium
      mountOptions:
        - '-o allow_other'
        - '--file-cache-timeout-in-seconds=120'

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: h2-admindb-storage
    spec:
      accessModes:
        - "ReadWriteMany"
      storageClassName: "azureblob-fuse-premium"
      volumeName: h2-admindb-storage
      resources:
        requests:
          storage: "5Gi"

backend:
  enabled: true
  env:
  # -- Security configuration  
    DIAL_ADMIN_CLIENT_ID: "%%AZURE_CLIENT_ID%%"
    ## set oidc auth
    SECURITY_JWT_JWKS_URI : "https://login.microsoftonline.com/common/discovery/v2.0/keys"     
    SECURITY_JWT_ACCEPTED_ISSUERS: "%%AZURE_TENANT_ID%%"
  # -- Export azure keyvault secret
    AUTH_AZURE_TYPE: managed
    CONFIG_EXPORT_KEYVAULT_TYPE : azure
    AZURE_KEY_VAULT_URL: "%%KEY_VAULT_URL%%"
    CONFIG_EXPORT_KEYVAULT_SECRET_NAMES: "%%KEYVAULT_SECRETS_ARRAY%%"
  
  extraEnvVarsSecret: admin-backend-csi-secrets  
  
  podLabels:
    azure.workload.identity/use: "true"

  automountServiceAccountToken: true
  
  updateStrategy:
    type: Recreate

  serviceAccount:
    create: true
    annotations:
      azure.workload.identity/client-id: "%%MANAGED_IDENTITY_CLIENT_ID%%"

  persistence:
    enabled: false

  extraVolumes:
    - name: admin-backend-secret
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: admin-backend-config
    - name: h2-admin-db
      persistentVolumeClaim:
        claimName: h2-admindb-storage


  extraVolumeMounts:        
    - name: admin-backend-csi-secret
      readOnly: true
      mountPath: /mnt/admin-secrets-store
    - name: h2-admin-db
      readOnly: false
      mountPath: /app/data/db


  configuration:
    datasourceVendor: "postgresql"
    export:
      namespace: "%%CONFIG_EXPORT_NAMESPACE%%"
      type: "configmap"
      names: ["core-config-configmap"]
      key: "env.config.json"


frontend:
  enabled: true
  env:
    # -- Canonical URL of your site
    # ref: https://next-auth.js.org/configuration/options#nextauth_url
    NEXTAUTH_URL: "https://dial-admin.%%DOMAIN%%"
    # -- DIAL core API endpoint
    # Internal service name (DNS name) of DIAL admin service
    DIAL_ADMIN_API_URL: "http://dial-admin-backend.%%NAMESPACE%%.svc.cluster.local"
    # -- External URL of DIAL themes;
    # Same allowlist as for DIAL admin frontend should be applied
    THEMES_CONFIG_HOST: "%%THEMES_PUBLIC_URL%%"
    # -- External Azure provider configuration;
    AUTH_AZURE_AD_CLIENT_ID: "%%AZURE_CLIENT_ID%%"
    AUTH_AZURE_AD_TENANT_ID: "%%AZURE_TENANT_ID%%"
    AUTH_AZURE_AD_NAME: "%%AZURE_REGISTRATION_NAME%%"
    AUTH_AZURE_AD_SCOPE: "openid profile %%AZURE_EXPOSE_CLIENT_ID%%/.DialAdminLogin email offline_access"

  secrets:
    NEXTAUTH_SECRET: "%%NEXTAUTH_SECRET%%"
    AUTH_AZURE_AD_SECRET: "%%AZURE_CLIENT_SECRET%%"

  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "%%CLUSTER_ISSUER%%"
    hosts:
      - dial-admin.%%DOMAIN%%
    tls:
      - secretName: "dial-admin-tls-secret"
        hosts:
          - dial-admin.%%DOMAIN%%