{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "dialAdmin.backend.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: backend
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.backend.autoscaling.hpa.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.backend.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: backend
  {{- if .Values.backend.updateStrategy }}
  strategy: {{ include "common.tplvalues.render" (dict "value" .Values.backend.updateStrategy "context" $) | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- if .Values.backend.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.backend.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      serviceAccountName: {{ template "dialAdmin.backend.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.backend.automountServiceAccountToken }}
      {{- include "common.images.renderPullSecrets" (dict "images" (list .Values.backend.image) "context" $) | nindent 6 }}
      {{- if .Values.backend.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.backend.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.backend.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.backend.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.backend.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.priorityClassName }}
      priorityClassName: {{ .Values.backend.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.backend.schedulerName }}
      schedulerName: {{ .Values.backend.schedulerName | quote }}
      {{- end }}
      {{- if .Values.backend.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.backend.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.backend.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.backend.terminationGracePeriodSeconds }}
      {{- end }}
      enableServiceLinks: {{ .Values.backend.enableServiceLinks }}
      {{- if .Values.backend.initContainers }}
      initContainers: {{- include "common.tplvalues.render" (dict "value" .Values.backend.initContainers "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      containers:
        - name: dial-admin-backend
          image: {{ include "common.images.image" (dict "imageRoot" .Values.backend.image "global" .Values.global) | quote }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy | quote }}
          {{- if .Values.backend.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.backend.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.backend.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.backend.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- include "dialAdmin.backend.databaseEnv" . | nindent 12 }}
            {{- include "dialAdmin.backend.configEnv" . | nindent 12 }}
            {{- range $key, $value := .Values.backend.env }}
            - name: {{ $key }}
              value: {{ tpl $value $ | quote }}
            {{- end }}
            {{- if .Values.backend.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.backend.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.backend.secrets }}
            - secretRef:
                name: {{ template "dialAdmin.backend.fullname" . }}
            {{- end }}
            {{- if .Values.backend.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.backend.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.backend.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.backend.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.backend.resources }}
          resources: {{- toYaml .Values.backend.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.containerPorts.http }}
            {{- if .Values.backend.metrics.enabled }}
            - name: http-metrics
              containerPort: {{ .Values.backend.containerPorts.metrics }}
            {{- end }}
          {{- if not .Values.backend.diagnosticMode.enabled }}
          {{- if .Values.backend.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.backend.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.backend.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.backend.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.backend.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.backend.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.backend.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.backend.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.backend.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.backend.startupProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.backend.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.backend.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          {{- if or .Values.backend.persistence.enabled .Values.backend.extraVolumeMounts (eq .Values.backend.configuration.datasourceVendor "h2") (not .Values.backend.configuration.export.names) }}
            {{- if or .Values.backend.persistence.enabled (eq .Values.backend.configuration.datasourceVendor "h2") (not .Values.backend.configuration.export.names ) }}
            - name: data
              mountPath: {{ .Values.backend.persistence.mountPath }}
            {{- end }}
            {{- if .Values.backend.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.backend.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
          {{- end }}
        {{- if .Values.backend.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.backend.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- if or .Values.backend.persistence.enabled (eq .Values.backend.configuration.datasourceVendor "h2") (not .Values.backend.configuration.export.names) }}
        - name: data
        {{- if .Values.backend.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "common.tplvalues.render" ( dict "value" .Values.backend.persistence.existingClaim "context" $) | default (include "dialAdmin.backend.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- end }}
        {{- if .Values.backend.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.backend.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}