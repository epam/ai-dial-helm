{{ template "chart.header" . }}

{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

## TL;DR

```console
helm repo add dial https://charts.epam-rail.com
helm install --name my-release dial/dial-core
```

## Prerequisites

- Helm 3.8.0+
- PV provisioner support in the underlying infrastructure (optional)
- Ingress controller support in the underlying infrastructure (optional)

{{ template "chart.requirementsSection" . }}

## Installing the Chart

To install the chart with the release name `my-release`:

```console
helm repo add dial https://charts.epam-rail.com
helm install --name my-release dial/dial-core
```

The command deploys dial-core on the Kubernetes cluster in the default configuration. The [Parameters](#parameters) section lists the parameters that can be configured during installation.

## Uninstalling the Chart

To uninstall/delete the `my-release` deployment:

```console
helm delete my-release
```

The command removes all the Kubernetes components associated with the chart and deletes the release.

**NOTE**: Persistent Volumes created by StatefulSets won't be deleted automatically

## Parameters

Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example:

```console
helm install my-release dial/dial-core --set image.tag=latest
```

Alternatively, a YAML file that specifies the values for the above parameters can be provided while installing the chart. For example:

```yaml
# values.yaml file content
image:
  tag: latest
```

```console
helm install my-release dial/dial-core -f values.yaml
```

**NOTE**: You can use the default [values.yaml](values.yaml)

{{ template "chart.valuesSection" . }}

## Redis

The application uses a Redis database to store its data. By default, the Helm chart will deploy a [Redis cluster](https://github.com/bitnami/charts/tree/main/bitnami/redis-cluster) with recommended settings and auto-generated password as a dependency.\
**You may have to set the `redis.password` value with the password generated by the Helm chart during the first installation.**

For other configuration options, refer to redis-cluster Helm chart [documentation](https://github.com/bitnami/charts/tree/main/bitnami/redis-cluster#parameters).

### Use an external Redis database

However, you may want the application to connect to an external Redis database rather than a database provided by the Helm chart - for example, when using a cloud-managed service, or when running a single database server for all your applications. To do this, set the `redis.enabled` parameter to `false` and specify the credentials for the external database using the `env.aidial.redis.*` parameters. Here is an example:

```yaml
redis:
  enabled: false
env:
  aidial.redis.clusterServersConfig.nodeAddresses: '["redis://myexternalhost:6379"]'
secrets:
  aidial.redis.clusterServersConfig.password: "mypassword"
```
